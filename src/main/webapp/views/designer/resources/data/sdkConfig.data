{
    "sdk": {
        "methods": [
            "autoReload();",
            "reloadAll();",
            "reload( [ 'ConnectionID_1' ] );",
            "reloadDataset( [ 'ComponentID_1' ] );",
            "updateGlobalVariable( 'ComponentID', {'Key': 'Values'}, Notify_true_OR_false );",
            "getGlobalVariable( 'key' );",
            "setValue( 'ComponentID', 'Value' );",
            "getValue( 'ComponentID' );",
            "getWidget( 'ComponentID' );",
            "hideComponent( [ 'ComponentID1', 'ComponentID2' ] );",
            "showComponent( [ 'ComponentID1', 'ComponentID2' ] );",
            "setContext( 'Key', 'Value' );",
            "getContext( 'Key' );",
            "removeContext( 'Key' );",
            "applyAggregation( 'ComponentID', 'Group_By_Field', 'Field1,Field2', 'Operation1,Operation2' );",
            "applyDataSetFilter( 'ComponentID', [\"Condition1\", \"Condition2\"] );",
            "applyAutoManipulator( 'ComponentID', 'Category_Group_Field', 'SeriesGroupField', 'ValueField', '#A0D468,#9087EE,#F89406,#EF4836,#6C7A89,#4ECDC4,#F5D76E,#BF55EC' );",
            "removeDataSetFilter( 'ComponentID' );",
			"removeAggregation( 'ComponentID' );",
			"removeAutoManipulator( 'ComponentID' );",
			"getAggregatedDataSet( changedItem.attributes.data, 'SUM' );",
            "hideAllComponentExcept( [ 'ComponentID1', 'ComponentID2' ] );",
            "showAllComponentExcept( [ 'ComponentID1', 'ComponentID2' ] );",
            "setAfterRenderCallBack( 'id',function() { /*Write your operation here*/ });",
            "changeBGColor( 'RectangleID', [ 'Color1', 'Color2' ]);",
            "changeDashboardBGColor( 'Color' );",
            "executeScript( 'ComponentID', {Key: Value pairs } );",
            "createHorizontalSlices( [ 'RectID1', 'RectID2' ], [ 'Value1', 'Value2' ], [ 'Color1', 'Color2' ] );",
            "createVerticalSlices([ 'RectID1', 'RectID2' ], [ 'Value1', 'Value2' ], [ 'Color1', 'Color2' ] );",
            "fillHorizontalByPercentage( 'RectID1', 'PercentValue' );",
            "fillVerticalByPercentage( 'RectID1', 'PercentValue' );",
            "getDivIdFromComponetId( 'ComponentID' );",
            "applyStyle( 'Selector', 'CSS_Property_Name', 'CSS_Value' );",
            "setTop( 'id', 20 );",
            "setLeft( 'id', 10 );",
            "getTop( 'id' );",
            "getLeft( 'id' );",
            "setGraphicsProperty( 'componentID', 'Property_Name', 'Property_Value' );",
            "getGraphicsProperty( 'ComponentID', 'Property_Name' );",
            "hideGroup( ['groupName'] );",
            "showGroup( ['groupName'] );",
            "setCategoryColors( 'ComponentID', 'colorMap' );",
            "sortData( 'ConnectionID', 'Sort_Field', 'asc OR desc', 'Numeric true OR false' );",
            "applyArraySort( 'Objects_Array', 'Sort_Field', 'asc OR desc', 'Numeric true OR false' );",
            "applyLanguageMapping( {'isEnabled': 'true', 'language': 'en-US', 'hideBrackets': 'true', 'name': 'Financial-Dashboard-Multiple-Language'} );",
			"setStatusMessage({'type': 'info', 'message': 'Status Message', 'timeout': '3000'});",
			"injectCSSRules('CSS_Rule_String');",
			"getWebSocketResponse( 'WebsocketConnectionID_1' );",
			"getConnectionSummary( 'PredictiveConnectionID_1' );",
			"getConnectionGraphs( 'PredictiveConnectionID_1' );",
            "applyGlobalFont( {'url': '', 'fontFamily': '', 'useGlobalFont': ''} );",
            "setCategoryColorSet( 'ComponentID', [ 'Color1', 'Color2', '...' ] );",
            "freezeHeader(['FreezeGroup1','FreezeGroup2']);"
        ],
        "properties": []
    },
    "changedItem": {
        "methods": [],
        "properties": [
            "attributes",
            "key"
        ]
    }
}